{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('api/users/register', userData).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n/*\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('api/users/register', userData)\n        .then(res => history.push('/login'))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n*/\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('/api/users/login', userData).then(function (res) {\n      //set token to local storage\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token); //Set token to Auth header\n\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //set logged in user \n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    paylod: decoded\n  };\n}; //log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    //remove token from local storage\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/alvinbalmeo/Desktop/healthy/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","paylod","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAAQC,UAAR,EAAoBC,gBAApB,QAA4C,SAA5C;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC3DR,IAAAA,KAAK,CACAS,IADL,CACU,oBADV,EACgCH,QADhC,EAEKI,IAFL,CAEU,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KAFb,EAGKC,KAHL,CAGW,UAAAC,GAAG;AAAA,aACNN,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ,UADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CADF;AAAA,KAHd;AASC,GAVuB;AAAA,CAArB;AAWP;;;;;;;;;;;;;AAaA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAb,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC7CR,IAAAA,KAAK,CACAS,IADL,CACU,kBADV,EAC8BH,QAD9B,EAEKI,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT;AADS,UAEDS,KAFC,GAEST,GAAG,CAACO,IAFb,CAEDE,KAFC;AAGTC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAHS,CAIT;;AACAnB,MAAAA,YAAY,CAACmB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAA1B;AACAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,KAVL,EAWKV,KAXL,CAWW,UAAAC,GAAG;AAAA,aACNN,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ,UADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CADF;AAAA,KAXd;AAiBH,GAlBgC;AAAA,CAA1B,C,CAoBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,OAAO,EAAI;AACrC,SAAM;AACFR,IAAAA,IAAI,EAAEX,gBADJ;AAEFqB,IAAAA,MAAM,EAAEF;AAFN,GAAN;AAIH,CALM,C,CAQP;;AACA,OAAO,IAAMG,UAAU,GAAE,SAAZA,UAAY;AAAA,SAAM,UAAAlB,QAAQ,EAAG;AACtC;AACAa,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA1B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,IAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GALwB;AAAA,CAAlB","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport {GET_ERRORS, SET_CURRENT_USER } from './types';\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post('api/users/register', userData) \n        .then(res => history.push('/login'))\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        );   \n    };\n/*\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('api/users/register', userData)\n        .then(res => history.push('/login'))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n*/\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post('/api/users/login', userData)\n        .then(res => {\n            //set token to local storage\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            //Set token to Auth header\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//set logged in user \nexport const setCurrentUser = decoded => {\n    return{\n        type: SET_CURRENT_USER, \n        paylod: decoded\n    };\n};\n\n\n//log user out\nexport const logoutUser =() => dispatch =>{\n    //remove token from local storage\n    localStorage.removeItem('jwtToken'); \n    setAuthToken(false); \n    dispatch(setCurrentUser({})); \n};"]},"metadata":{},"sourceType":"module"}