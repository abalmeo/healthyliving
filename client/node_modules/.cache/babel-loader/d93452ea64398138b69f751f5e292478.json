{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { TEST_DISPATCH, GET_ERRORS, SET_CURRENT_USER } from './type';\nexport var testUser = function testUser(userData) {\n  return function (dispatch) {\n    return {\n      type: TEST_DISPATCH,\n      payload: userData\n    };\n  };\n};\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('api/users/register', userData).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('/api/users/login', userData).then(function (res) {\n      //set token to local storage\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token); //Set token to Auth header\n\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //set logged in user \n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    paylod: decoded\n  };\n}; //log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    //remove token from local storage\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/alvinbalmeo/Desktop/healthy/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","TEST_DISPATCH","GET_ERRORS","SET_CURRENT_USER","testUser","userData","dispatch","type","payload","registerUser","history","post","then","res","push","catch","err","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","paylod","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,gBAApC,QAA4D,QAA5D;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD;AAAA,SAAc,UAAAC,QAAQ,EAAI;AAC9C,WAAM;AACFC,MAAAA,IAAI,EAAEN,aADJ;AAEFO,MAAAA,OAAO,EAAEH;AAFP,KAAN;AAOH,GARuB;AAAA,CAAjB;AAUP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACJ,QAAD,EAAWK,OAAX;AAAA,SAAuB,UAAAJ,QAAQ,EAAI;AAC3DR,IAAAA,KAAK,CAACa,IAAN,CAAW,oBAAX,EAAiCN,QAAjC,EACKO,IADL,CACU,UAAAC,GAAG;AAAA,aAAIH,OAAO,CAACI,IAAR,CAAa,QAAb,CAAJ;AAAA,KADb,EAEKC,KAFL,CAEW,UAAAC,GAAG;AAAA,aACNV,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,UADD;AAELM,QAAAA,OAAO,EAAEQ,GAAG,CAACC,QAAJ,CAAaC;AAFjB,OAAD,CADF;AAAA,KAFd;AAQH,GAT2B;AAAA,CAArB;AAYP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAd,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC7CR,IAAAA,KAAK,CACAa,IADL,CACU,kBADV,EAC8BN,QAD9B,EAEKO,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT;AADS,UAEDO,KAFC,GAESP,GAAG,CAACK,IAFb,CAEDE,KAFC;AAGTC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAHS,CAIT;;AACArB,MAAAA,YAAY,CAACqB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGvB,UAAU,CAACoB,KAAD,CAA1B;AACAd,MAAAA,QAAQ,CAACkB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,KAVL,EAWKR,KAXL,CAWW,UAAAC,GAAG;AAAA,aACNV,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,UADD;AAELM,QAAAA,OAAO,EAAEQ,GAAG,CAACC,QAAJ,CAAaC;AAFjB,OAAD,CADF;AAAA,KAXd;AAiBH,GAlBgC;AAAA,CAA1B,C,CAoBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,OAAO,EAAI;AACrC,SAAM;AACFhB,IAAAA,IAAI,EAAEJ,gBADJ;AAEFsB,IAAAA,MAAM,EAAEF;AAFN,GAAN;AAIH,CALM,C,CAQP;;AACA,OAAO,IAAMG,UAAU,GAAE,SAAZA,UAAY;AAAA,SAAM,UAAApB,QAAQ,EAAG;AACtC;AACAe,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA5B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,IAAAA,QAAQ,CAACkB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GALwB;AAAA,CAAlB","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { TEST_DISPATCH, GET_ERRORS, SET_CURRENT_USER } from './type';\n\nexport const testUser = (userData) => dispatch => {\n    return{\n        type: TEST_DISPATCH, \n        payload: userData\n\n    }\n   \n        \n};\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('api/users/register', userData)\n        .then(res => history.push('/login'))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post('/api/users/login', userData)\n        .then(res => {\n            //set token to local storage\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            //Set token to Auth header\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//set logged in user \nexport const setCurrentUser = decoded => {\n    return{\n        type: SET_CURRENT_USER, \n        paylod: decoded\n    };\n};\n\n\n//log user out\nexport const logoutUser =() => dispatch =>{\n    //remove token from local storage\n    localStorage.removeItem('jwtToken'); \n    setAuthToken(false); \n    dispatch(setCurrentUser({})); \n};"]},"metadata":{},"sourceType":"module"}