{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { TEST_DISPATCH, GET_ERRORS, SET_CURRENT_USER } from './types';\nexport var registerUser = function registerUser(userData) {\n  return function (dispatch) {\n    return {\n      type: TEST_DISPATCH,\n      payload: userData\n    };\n  };\n};\n/*\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('api/users/register', userData)\n        .then(res => history.push('/login'))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n*/\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('/api/users/login', userData).then(function (res) {\n      //set token to local storage\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token); //Set token to Auth header\n\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //set logged in user \n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    paylod: decoded\n  };\n}; //log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    //remove token from local storage\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/alvinbalmeo/Desktop/healthy/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","TEST_DISPATCH","GET_ERRORS","SET_CURRENT_USER","registerUser","userData","dispatch","type","payload","loginUser","post","then","res","token","data","localStorage","setItem","decoded","setCurrentUser","catch","err","response","paylod","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,gBAApC,QAA4D,SAA5D;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,SAAc,UAAAC,QAAQ,EAAI;AAClD,WAAM;AACFC,MAAAA,IAAI,EAAEN,aADJ;AAEFO,MAAAA,OAAO,EAAEH;AAFP,KAAN;AAOH,GAR2B;AAAA,CAArB;AASP;;;;;;;;;;;;;AAaA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAAJ,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC7CR,IAAAA,KAAK,CACAY,IADL,CACU,kBADV,EAC8BL,QAD9B,EAEKM,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT;AADS,UAEDC,KAFC,GAESD,GAAG,CAACE,IAFb,CAEDD,KAFC;AAGTE,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC,EAHS,CAIT;;AACAd,MAAAA,YAAY,CAACc,KAAD,CAAZ;AACA,UAAMI,OAAO,GAAGjB,UAAU,CAACa,KAAD,CAA1B;AACAP,MAAAA,QAAQ,CAACY,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,KAVL,EAWKE,KAXL,CAWW,UAAAC,GAAG;AAAA,aACNd,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,UADD;AAELM,QAAAA,OAAO,EAAEY,GAAG,CAACC,QAAJ,CAAaP;AAFjB,OAAD,CADF;AAAA,KAXd;AAiBH,GAlBgC;AAAA,CAA1B,C,CAoBP;;AACA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,OAAO,EAAI;AACrC,SAAM;AACFV,IAAAA,IAAI,EAAEJ,gBADJ;AAEFmB,IAAAA,MAAM,EAAEL;AAFN,GAAN;AAIH,CALM,C,CAQP;;AACA,OAAO,IAAMM,UAAU,GAAE,SAAZA,UAAY;AAAA,SAAM,UAAAjB,QAAQ,EAAG;AACtC;AACAS,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAzB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,IAAAA,QAAQ,CAACY,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GALwB;AAAA,CAAlB","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { TEST_DISPATCH, GET_ERRORS, SET_CURRENT_USER } from './types';\n\nexport const registerUser = (userData) => dispatch => {\n    return{\n        type: TEST_DISPATCH, \n        payload: userData\n\n    }\n   \n        \n};\n/*\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('api/users/register', userData)\n        .then(res => history.push('/login'))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n*/\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post('/api/users/login', userData)\n        .then(res => {\n            //set token to local storage\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            //Set token to Auth header\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//set logged in user \nexport const setCurrentUser = decoded => {\n    return{\n        type: SET_CURRENT_USER, \n        paylod: decoded\n    };\n};\n\n\n//log user out\nexport const logoutUser =() => dispatch =>{\n    //remove token from local storage\n    localStorage.removeItem('jwtToken'); \n    setAuthToken(false); \n    dispatch(setCurrentUser({})); \n};"]},"metadata":{},"sourceType":"module"}